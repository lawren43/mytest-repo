<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- 
	<context:component-scan base-package="cht.hioss.jpatutorial.model" />
    -->

	<context:component-scan base-package="cht.hioss.jpatutorial.dao" />
    
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="jpa-tutorial-unit"/>
    </bean>


<!-- 
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.journaldev.spring.model" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="org.postgresql.Driver" />
		<property name="url" value="jdbc:postgresql://localhost:5432/test_db" />
		<property name="username" value="test_user" />
		<property name="password" value="test_password" />
	</bean>
-->

  
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- BeanPostProcessor that processes PersistenceUnit and PersistenceContext annotations, for injection of the corresponding 
		JPA resources EntityManagerFactory and EntityManager
		--> 
	<bean id="persistenceExceptionTranslationPostProcessor" class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

<!--  
	<bean id="personDAO" class="com.journaldev.spring.dao.jpa.PersonDAOImpl" />
-->

 
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
    	<tx:attributes>
	    	<tx:method name="addPersonWithCheckedExceptionAdvice" rollback-for="AccountExpiredException"/>
	    	<tx:method name="*"/>
    	</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="personServiceOperation" expression="execution(* cht.hioss.jpatutorial.service.*.*(..))"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="personServiceOperation"/>
	</aop:config>

 
</beans>
